{:rename-macros {}, :renames {}, :externs {Error {}, setInterval {}, Date {prototype {toTimeString {}}}}, :use-macros {input tiltontec.tag.gen, h1 tiltontec.tag.gen, c-in tiltontec.cell.core, mxi-find tiltontec.model.core, evt-tag tiltontec.tag.gen, mxu-find-name tiltontec.model.core, md-get tiltontec.model.core, md-reset! tiltontec.model.core, c?once tiltontec.cell.core, matrix tiltontec.model.core, div tiltontec.tag.gen, c? tiltontec.cell.core, mx-par tiltontec.model.core}, :excludes #{}, :name todomx.startwatch, :imports nil, :requires {str clojure.string, clojure.string clojure.string, tiltontec.cell.core tiltontec.cell.core, md tiltontec.model.core, tiltontec.model.core tiltontec.model.core, tiltontec.tag.gen tiltontec.tag.gen}, :cljs.spec/speced-vars [], :uses {c-in tiltontec.cell.core, target-value tiltontec.tag.gen, mxi-find tiltontec.model.core, evt-tag tiltontec.tag.gen, mxu-find-name tiltontec.model.core, md-get tiltontec.model.core, md-reset! tiltontec.model.core, matrix tiltontec.model.core, mx-par tiltontec.model.core}, :defs {clock {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/startwatch.cljs", :line 19, :column 7, :end-line 19, :end-column 12, :arglists (quote ([]))}, :name todomx.startwatch/clock, :variadic false, :file "src/todomx/startwatch.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, time-color {:name todomx.startwatch/time-color, :file "src/todomx/startwatch.cljs", :line 9, :column 1, :end-line 9, :end-column 26, :declared true, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/startwatch.cljs", :line 9, :column 16, :end-line 9, :end-column 26, :declared true}}, matrix-build! {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/startwatch.cljs", :line 11, :column 7, :end-line 11, :end-column 20, :arglists (quote ([]))}, :name todomx.startwatch/matrix-build!, :variadic false, :file "src/todomx/startwatch.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {tiltontec.cell.core tiltontec.cell.core, tiltontec.tag.gen tiltontec.tag.gen}, :cljs.analyzer/constants {:seen #{:tick :timecolor h1 clojure.core/assert me js/Date. md/with-par :content .toTimeString :rule :value :ticker -> mxu-find-name :ephemeral? :mx-dom if :todomx.startwatch/startwatch :style md-get md-reset! fn* :class tiltontec.cell.base/without-c-dependency :code div str js/setInterval :input? tiltontec.model.core/the-kids}, :order [:todomx.startwatch/startwatch :mx-dom :code tiltontec.cell.base/without-c-dependency md/with-par me div h1 :input? :value :rule clojure.core/assert tiltontec.model.core/the-kids :class :style :tick :ticker :content str md-get mxu-find-name :timecolor :ephemeral? js/setInterval fn* md-reset! if -> js/Date. .toTimeString]}, :doc nil}