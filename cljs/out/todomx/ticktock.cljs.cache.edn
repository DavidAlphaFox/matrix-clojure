{:rename-macros {}, :renames {}, :externs {Error {}, setInterval {}, Date {prototype {toTimeString {}}}}, :use-macros {input tiltontec.tag.gen, h1 tiltontec.tag.gen, c-in tiltontec.cell.core, mxi-find tiltontec.model.core, evt-tag tiltontec.tag.gen, mxu-find-name tiltontec.model.core, md-get tiltontec.model.core, md-reset! tiltontec.model.core, c?once tiltontec.cell.core, matrix tiltontec.model.core, div tiltontec.tag.gen, c? tiltontec.cell.core, mx-par tiltontec.model.core}, :excludes #{}, :name todomx.ticktock, :imports nil, :requires {str clojure.string, clojure.string clojure.string, tiltontec.cell.core tiltontec.cell.core, md tiltontec.model.core, tiltontec.model.core tiltontec.model.core, tiltontec.tag.gen tiltontec.tag.gen}, :cljs.spec/speced-vars [], :uses {c-in tiltontec.cell.core, target-value tiltontec.tag.gen, mxi-find tiltontec.model.core, evt-tag tiltontec.tag.gen, mxu-find-name tiltontec.model.core, md-get tiltontec.model.core, md-reset! tiltontec.model.core, matrix tiltontec.model.core, mx-par tiltontec.model.core}, :defs {clock {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/ticktock.cljs", :line 18, :column 7, :end-line 18, :end-column 12, :arglists (quote ([]))}, :name todomx.ticktock/clock, :variadic false, :file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/ticktock.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, time-color {:name todomx.ticktock/time-color, :file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/ticktock.cljs", :line 8, :column 1, :end-line 8, :end-column 26, :declared true, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/ticktock.cljs", :line 8, :column 16, :end-line 8, :end-column 26, :declared true}}, color-input {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/ticktock.cljs", :line 32, :column 7, :end-line 32, :end-column 18, :arglists (quote ([]))}, :name todomx.ticktock/color-input, :variadic false, :file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/ticktock.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, matrix-build! {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/ticktock.cljs", :line 10, :column 7, :end-line 10, :end-column 20, :arglists (quote ([]))}, :name todomx.ticktock/matrix-build!, :variadic false, :file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/ticktock.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {tiltontec.cell.core tiltontec.cell.core, tiltontec.tag.gen tiltontec.tag.gen}, :cljs.analyzer/constants {:seen #{:tick input clock :timecolor h1 :onchange first clojure.core/assert me c-in target-value js/Date. md/with-par :content :todomx.ticktock/ticktock .toTimeString :name :rule :value :ticker evt-tag -> mxu-find-name :ephemeral? :mx-dom str/split if :style md-get md-reset! fn* :class tiltontec.cell.base/without-c-dependency :tag/type :code div str color-input js/setInterval :input? p1__11631# tiltontec.model.core/the-kids}, :order [:todomx.ticktock/ticktock :mx-dom :code tiltontec.cell.base/without-c-dependency md/with-par me div h1 clock color-input :input? :value :rule clojure.core/assert tiltontec.model.core/the-kids :class :style :tick :ticker :content str md-get mxu-find-name :timecolor :ephemeral? js/setInterval fn* md-reset! if -> js/Date. .toTimeString str/split first input :name :tag/type :onchange c-in p1__11631# evt-tag target-value]}, :doc nil}