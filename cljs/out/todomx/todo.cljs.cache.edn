{:rename-macros {}, :renames {}, :externs {Error {}, JSON {parse {}, stringify {}}}, :use-macros {c-in tiltontec.cell.core, unbound tiltontec.cell.base, pln tiltontec.util.core, c?n tiltontec.cell.core, make tiltontec.model.core, now tiltontec.util.core, observe-by-type tiltontec.cell.observer, md-get tiltontec.model.core, md-reset! tiltontec.model.core, ia-type tiltontec.cell.base, c? tiltontec.cell.core}, :excludes #{}, :name todomx.todo, :imports nil, :requires {tiltontec.cell.observer tiltontec.cell.observer, tiltontec.cell.base tiltontec.cell.base, md tiltontec.model.core, tiltontec.tag.html tiltontec.tag.html, tiltontec.util.core tiltontec.util.core, tiltontec.cell.core tiltontec.cell.core, tiltontec.model.core tiltontec.model.core, util tiltontec.util.core, str clojure.string, clojure.string clojure.string}, :cljs.spec/speced-vars [], :uses {io-truncate tiltontec.tag.html, io-upsert tiltontec.tag.html, c-in tiltontec.cell.core, map-to-json tiltontec.util.core, unbound tiltontec.cell.base, pln tiltontec.util.core, make tiltontec.model.core, io-find tiltontec.tag.html, now tiltontec.util.core, observe-by-type tiltontec.cell.observer, md-get tiltontec.model.core, md-reset! tiltontec.model.core, json-to-map tiltontec.util.core, ia-type tiltontec.cell.base, io-read tiltontec.tag.html, uuidv4 tiltontec.util.core}, :defs {td-upsert {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/todo.cljs", :line 141, :column 8, :end-line 141, :end-column 17, :private true, :arglists (quote ([td]))}, :private true, :name todomx.todo/td-upsert, :variadic false, :file "src/todomx/todo.cljs", :end-column 17, :method-params ([td]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 1, :fn-var true, :arglists (quote ([td]))}, td-delete! {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/todo.cljs", :line 88, :column 7, :end-line 88, :end-column 17, :arglists (quote ([td]))}, :name todomx.todo/td-delete!, :variadic false, :file "src/todomx/todo.cljs", :end-column 17, :method-params ([td]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([td]))}, todo-list {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/todo.cljs", :line 24, :column 7, :end-line 24, :end-column 16, :arglists (quote ([]))}, :name todomx.todo/todo-list, :variadic false, :file "src/todomx/todo.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, td-toggle-completed! {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/todo.cljs", :line 92, :column 7, :end-line 92, :end-column 27, :arglists (quote ([td]))}, :name todomx.todo/td-toggle-completed!, :variadic false, :file "src/todomx/todo.cljs", :end-column 27, :method-params ([td]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([td]))}, load-all {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/todo.cljs", :line 117, :column 8, :end-line 117, :end-column 16, :private true, :arglists (quote ([]))}, :private true, :name todomx.todo/load-all, :variadic false, :file "src/todomx/todo.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, make-todo {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/todo.cljs", :line 47, :column 7, :end-line 47, :end-column 16, :arglists (quote ([islots])), :doc "Make a matrix incarnation of a todo on initial entry"}, :name todomx.todo/make-todo, :variadic false, :file "src/todomx/todo.cljs", :end-column 16, :method-params ([islots]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([islots])), :doc "Make a matrix incarnation of a todo on initial entry"}, td-title {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/todo.cljs", :line 72, :column 7, :end-line 72, :end-column 15, :arglists (quote ([td]))}, :name todomx.todo/td-title, :variadic false, :file "src/todomx/todo.cljs", :end-column 15, :method-params ([td]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([td]))}, td-to-json {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/todo.cljs", :line 146, :column 8, :end-line 146, :end-column 18, :private true, :arglists (quote ([todo]))}, :private true, :name todomx.todo/td-to-json, :variadic false, :file "src/todomx/todo.cljs", :end-column 18, :method-params ([todo]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 1, :fn-var true, :arglists (quote ([todo]))}, td-id {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/todo.cljs", :line 75, :column 7, :end-line 75, :end-column 12, :arglists (quote ([td]))}, :name todomx.todo/td-id, :variadic false, :file "src/todomx/todo.cljs", :end-column 12, :method-params ([td]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([td]))}, td-deleted {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/todo.cljs", :line 81, :column 7, :end-line 81, :end-column 17, :arglists (quote ([td]))}, :name todomx.todo/td-deleted, :variadic false, :file "src/todomx/todo.cljs", :end-column 17, :method-params ([td]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([td]))}, td-completed {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/todo.cljs", :line 78, :column 7, :end-line 78, :end-column 19, :arglists (quote ([td]))}, :name todomx.todo/td-completed, :variadic false, :file "src/todomx/todo.cljs", :end-column 19, :method-params ([td]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([td]))}, TODO_LS_PREFIX {:name todomx.todo/TODO_LS_PREFIX, :file "src/todomx/todo.cljs", :line 22, :column 1, :end-line 22, :end-column 20, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/todo.cljs", :line 22, :column 6, :end-line 22, :end-column 20}, :tag string}, remake-todo {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/todo.cljs", :line 125, :column 8, :end-line 125, :end-column 19, :private true, :arglists (quote ([islots]))}, :private true, :name todomx.todo/remake-todo, :variadic false, :file "src/todomx/todo.cljs", :end-column 19, :method-params ([islots]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([islots]))}, td-created {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/todo.cljs", :line 67, :column 7, :end-line 67, :end-column 17, :arglists (quote ([td]))}, :name todomx.todo/td-created, :variadic false, :file "src/todomx/todo.cljs", :end-column 17, :method-params ([td]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([td]))}}, :cljs.spec/registry-ref [], :require-macros {tiltontec.cell.core tiltontec.cell.core}, :cljs.analyzer/constants {:seen #{:deleted doall me :empty? :items-completed :completed :rule remove :value :type :created :items-raw load-all :title :todomx.todo/todo-list md-get zero? :id td-deleted tiltontec.cell.base/without-c-dependency :code :todomx.todo/todo td-completed filter :items :input? count :items-active}, :order [:todomx.todo/todo-list :items-raw :code tiltontec.cell.base/without-c-dependency load-all :input? :value :rule :items doall remove td-deleted md-get me :items-completed filter td-completed :items-active :empty? zero? count :type :id :created :title :completed :deleted :todomx.todo/todo]}, :doc nil}