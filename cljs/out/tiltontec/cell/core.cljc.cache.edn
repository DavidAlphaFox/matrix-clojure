{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {fn-obs tiltontec.cell.observer, caller-ensure tiltontec.cell.base, *not-to-be* tiltontec.cell.base, caller-drop tiltontec.cell.base, c-input? tiltontec.cell.base, c-synaptic? tiltontec.cell.base, c-synapses tiltontec.cell.base, c-value-state tiltontec.cell.base, c-optimized-away? tiltontec.cell.base, unbound tiltontec.cell.base, c-optimize tiltontec.cell.base, c-valid? tiltontec.cell.base, *causation* tiltontec.cell.base, *defer-changes* tiltontec.cell.base, c-pulse tiltontec.cell.base, record-dependency tiltontec.cell.evaluate, wtrx tiltontec.util.base, +pulse+ tiltontec.cell.base, c-pulse-last-changed tiltontec.cell.base, md-ref? tiltontec.cell.base, ensure-value-is-current tiltontec.cell.evaluate, c-value tiltontec.cell.base, with-integrity tiltontec.cell.integrity, mdead? tiltontec.cell.base, c-get tiltontec.cell.evaluate, c-callers tiltontec.cell.base, c-ephemeral? tiltontec.cell.base, c-ref? tiltontec.cell.base, c-value-assume tiltontec.cell.evaluate, c-model tiltontec.cell.base, c-pulse-observed tiltontec.cell.base, def-rmap-slots tiltontec.util.base, c-slot tiltontec.cell.base, c-rule tiltontec.cell.base, unlink-from-callers tiltontec.cell.base, c-formula? tiltontec.cell.base, c-me tiltontec.cell.base, *trx?* tiltontec.util.base, c-lazy tiltontec.cell.base, trx tiltontec.util.base, md-slot-owning? tiltontec.cell.base, def-rmap-meta-slots tiltontec.util.base, c-useds tiltontec.cell.base, *call-stack* tiltontec.cell.base, *c-prop-depth* tiltontec.cell.base, c-unbound? tiltontec.cell.base, without-c-dependency tiltontec.cell.base, *depender* tiltontec.cell.base, rmap-setf tiltontec.util.core, prog1 tiltontec.util.base, c-state tiltontec.cell.base}, :excludes #{}, :name tiltontec.cell.core, :imports nil, :requires {tiltontec.util.core tiltontec.util.core, tiltontec.util.base tiltontec.util.base, cty tiltontec.cell.base, tiltontec.cell.base tiltontec.cell.base, tiltontec.cell.observer tiltontec.cell.observer, cljs.pprint cljs.pprint, tiltontec.cell.integrity tiltontec.cell.integrity, tiltontec.cell.evaluate tiltontec.cell.evaluate}, :cljs.spec/speced-vars [], :uses {caller-ensure tiltontec.cell.base, *not-to-be* tiltontec.cell.base, pprint cljs.pprint, caller-drop tiltontec.cell.base, c-input? tiltontec.cell.base, c-synaptic? tiltontec.cell.base, c-synapses tiltontec.cell.base, c-value-state tiltontec.cell.base, c-optimized-away? tiltontec.cell.base, unbound tiltontec.cell.base, c-optimize tiltontec.cell.base, c-valid? tiltontec.cell.base, *causation* tiltontec.cell.base, *defer-changes* tiltontec.cell.base, c-pulse tiltontec.cell.base, record-dependency tiltontec.cell.evaluate, +pulse+ tiltontec.cell.base, c-pulse-last-changed tiltontec.cell.base, md-ref? tiltontec.cell.base, ensure-value-is-current tiltontec.cell.evaluate, c-value tiltontec.cell.base, mdead? tiltontec.cell.base, c-get tiltontec.cell.evaluate, c-callers tiltontec.cell.base, cl-format cljs.pprint, c-ephemeral? tiltontec.cell.base, c-ref? tiltontec.cell.base, c-value-assume tiltontec.cell.evaluate, c-model tiltontec.cell.base, c-pulse-observed tiltontec.cell.base, c-slot tiltontec.cell.base, c-rule tiltontec.cell.base, unlink-from-callers tiltontec.cell.base, c-formula? tiltontec.cell.base, c-me tiltontec.cell.base, c-lazy tiltontec.cell.base, md-slot-owning? tiltontec.cell.base, c-useds tiltontec.cell.base, *call-stack* tiltontec.cell.base, *c-prop-depth* tiltontec.cell.base, c-unbound? tiltontec.cell.base, *depender* tiltontec.cell.base, rmap-setf tiltontec.util.core, c-state tiltontec.cell.base}, :defs {make-cell {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 45, :column 7, :end-line 45, :end-column 16, :arglists (quote ([& kvs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(kvs)], :arglists ([& kvs]), :arglists-meta (nil)}}, :name tiltontec.cell.core/make-cell, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(kvs)], :arglists ([& kvs]), :arglists-meta (nil)}, :method-params [(kvs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists ([& kvs])}, c_1 {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 159, :column 11, :end-line 159, :end-column 14, :macro true, :arglists (quote ([& body])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c_1, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}, :method-params [(&form &env body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 159, :macro true, :end-line 159, :max-fixed-arity 2, :fn-var false, :arglists ([&form &env & body])}, c-in {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 212, :column 7, :end-line 212, :end-column 11, :arglists (quote ([value & option-kvs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(value option-kvs)], :arglists ([value & option-kvs]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c-in, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(value option-kvs)], :arglists ([value & option-kvs]), :arglists-meta (nil)}, :method-params [(value option-kvs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 1, :fn-var true, :arglists ([value & option-kvs])}, c?n-dbg {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 135, :column 11, :end-line 135, :end-column 18, :macro true, :arglists (quote ([& body])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c?n-dbg, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}, :method-params [(&form &env body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 135, :macro true, :end-line 135, :max-fixed-arity 2, :fn-var false, :arglists ([&form &env & body])}, c?dbg {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 170, :column 11, :end-line 170, :end-column 16, :macro true, :arglists (quote ([& body])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c?dbg, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}, :method-params [(&form &env body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 170, :macro true, :end-line 170, :max-fixed-arity 2, :fn-var false, :arglists ([&form &env & body])}, c-fn {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 96, :column 11, :end-line 96, :end-column 15, :macro true, :arglists (quote ([& body])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c-fn, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}, :method-params [(&form &env body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 96, :macro true, :end-line 96, :max-fixed-arity 2, :fn-var false, :arglists ([&form &env & body])}, c?_ {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 177, :column 11, :end-line 177, :end-column 14, :macro true, :arglists (quote ([[& options] & body])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env [& options] body)], :arglists ([&form &env [& options] & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c?_, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env [& options] body)], :arglists ([&form &env [& options] & body]), :arglists-meta (nil)}, :method-params [(&form &env [& options] body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 177, :macro true, :end-line 177, :max-fixed-arity 3, :fn-var false, :arglists ([&form &env [& options] & body])}, c?n {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 112, :column 11, :end-line 112, :end-column 14, :macro true, :arglists (quote ([& body])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c?n, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}, :method-params [(&form &env body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 112, :macro true, :end-line 112, :max-fixed-arity 2, :fn-var false, :arglists ([&form &env & body])}, c_?dbg {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 194, :column 11, :end-line 194, :end-column 17, :macro true, :arglists (quote ([& body])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c_?dbg, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}, :method-params [(&form &env body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 194, :macro true, :end-line 194, :max-fixed-arity 2, :fn-var false, :arglists ([&form &env & body])}, c_? {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 185, :column 11, :end-line 185, :end-column 14, :macro true, :arglists (quote ([[& options] & body])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env [& options] body)], :arglists ([&form &env [& options] & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c_?, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env [& options] body)], :arglists ([&form &env [& options] & body]), :arglists-meta (nil)}, :method-params [(&form &env [& options] body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 185, :macro true, :end-line 185, :max-fixed-arity 3, :fn-var false, :arglists ([&form &env [& options] & body])}, c_?n {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 127, :column 11, :end-line 127, :end-column 15, :macro true, :arglists (quote ([& body])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c_?n, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}, :method-params [(&form &env body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 127, :macro true, :end-line 127, :max-fixed-arity 2, :fn-var false, :arglists ([&form &env & body])}, c?+ {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 105, :column 11, :end-line 105, :end-column 14, :macro true, :arglists (quote ([[& options] & body])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env [& options] body)], :arglists ([&form &env [& options] & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c?+, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env [& options] body)], :arglists ([&form &env [& options] & body]), :arglists-meta (nil)}, :method-params [(&form &env [& options] body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 105, :macro true, :end-line 105, :max-fixed-arity 3, :fn-var false, :arglists ([&form &env [& options] & body])}, call-c-reset-next! {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 260, :column 7, :end-line 260, :end-column 25, :arglists (quote ([c new-value]))}, :name tiltontec.cell.core/call-c-reset-next!, :variadic false, :file "src/tiltontec/cell/core.cljc", :end-column 25, :method-params ([c new-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c new-value]))}, c?1 {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 167, :column 11, :end-line 167, :end-column 14, :macro true, :arglists (quote ([& body])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c?1, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}, :method-params [(&form &env body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 167, :macro true, :end-line 167, :max-fixed-arity 2, :fn-var false, :arglists ([&form &env & body])}, c?once {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 152, :column 11, :end-line 152, :end-column 17, :macro true, :arglists (quote ([& body])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c?once, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}, :method-params [(&form &env body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 152, :macro true, :end-line 152, :max-fixed-arity 2, :fn-var false, :arglists ([&form &env & body])}, c?+n {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 119, :column 11, :end-line 119, :end-column 15, :macro true, :arglists (quote ([[& options] & body])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env [& options] body)], :arglists ([&form &env [& options] & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c?+n, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env [& options] body)], :arglists ([&form &env [& options] & body]), :arglists-meta (nil)}, :method-params [(&form &env [& options] body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 119, :macro true, :end-line 119, :max-fixed-arity 3, :fn-var false, :arglists ([&form &env [& options] & body])}, c-reset! {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 220, :column 7, :end-line 220, :end-column 15, :arglists (quote ([c new-value]))}, :name tiltontec.cell.core/c-reset!, :variadic false, :file "src/tiltontec/cell/core.cljc", :end-column 15, :method-params ([c new-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 220, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c new-value]))}, make-c-formula {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 63, :column 7, :end-line 63, :end-column 21, :arglists (quote ([& kvs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(kvs)], :arglists ([& kvs]), :arglists-meta (nil)}}, :name tiltontec.cell.core/make-c-formula, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(kvs)], :arglists ([& kvs]), :arglists-meta (nil)}, :method-params [(kvs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 0, :fn-var true, :arglists ([& kvs])}, c? {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 99, :column 11, :end-line 99, :end-column 13, :macro true, :arglists (quote ([& body])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c?, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}, :method-params [(&form &env body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 99, :macro true, :end-line 99, :max-fixed-arity 2, :fn-var false, :arglists ([&form &env & body])}, c-fn-var {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 88, :column 11, :end-line 88, :end-column 19, :macro true, :arglists (quote ([[c] & body])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env [c] body)], :arglists ([&form &env [c] & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c-fn-var, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env [c] body)], :arglists ([&form &env [c] & body]), :arglists-meta (nil)}, :method-params [(&form &env [c] body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 88, :macro true, :end-line 88, :max-fixed-arity 3, :fn-var false, :arglists ([&form &env [c] & body])}, c-reset-next! {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 240, :column 11, :end-line 240, :end-column 24, :macro true, :arglists (quote ([f-c f-new-value]))}, :name tiltontec.cell.core/c-reset-next!, :variadic false, :file "src/tiltontec/cell/core.cljc", :end-column 24, :method-params ([&form &env f-c f-new-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 240, :macro true, :end-line 240, :max-fixed-arity 4, :fn-var false, :arglists (quote ([f-c f-new-value]))}, c?n-until {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 143, :column 11, :end-line 143, :end-column 20, :macro true, :arglists (quote ([args & body])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env args body)], :arglists ([&form &env args & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c?n-until, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env args body)], :arglists ([&form &env args & body]), :arglists-meta (nil)}, :method-params [(&form &env args body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 143, :macro true, :end-line 143, :max-fixed-arity 3, :fn-var false, :arglists ([&form &env args & body])}, c-formula {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/tiltontec/cell/core.cljc", :line 205, :column 11, :end-line 205, :end-column 20, :macro true, :arglists (quote ([[& kvs] & body])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env [& kvs] body)], :arglists ([&form &env [& kvs] & body]), :arglists-meta (nil)}}, :name tiltontec.cell.core/c-formula, :variadic true, :file "src/tiltontec/cell/core.cljc", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env [& kvs] body)], :arglists ([&form &env [& kvs] & body]), :arglists-meta (nil)}, :method-params [(&form &env [& kvs] body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 205, :macro true, :end-line 205, :max-fixed-arity 3, :fn-var false, :arglists ([&form &env [& kvs] & body])}}, :cljs.spec/registry-ref [], :require-macros {tiltontec.util.base tiltontec.util.base, cty tiltontec.cell.base, tiltontec.cell.base tiltontec.cell.base, tiltontec.cell.observer tiltontec.cell.observer, cljs.pprint cljs.pprint, tiltontec.cell.integrity tiltontec.cell.integrity}, :cljs.analyzer/constants {:seen #{:callers me cell tiltontec.cell.core/without-c-dependency tiltontec.cell.core/c?once tiltontec.cell.core/call-c-reset-next! :meta tiltontec.cell.base/unbound tiltontec.cell.core/*within-integrity* :else c__11133__auto__ defer-info :rule :value tiltontec.cell.core/make-c-formula tiltontec.cell.core/ufb-add :type new-value__11134__auto__ :ephemeral? :debug tiltontec.cell.base/c-value :state :synapses :nascent opcode cljs.core/let :pulse-observed cljs.core/cond slot-name :lazy :tiltontec.cell.base/c-formula tiltontec.cell.base/c-slot tiltontec.cell.core/c-fn-var :pulse-last-changed :c-reset-next! js/Error. tiltontec.cell.base/c-model :pulse cljs.core/fn :code slot-c# :useds :tiltontec.cell.base/cell :optimize :when-value-t cljs.core/not :until-asked cache tiltontec.cell.core/c-fn :once-asked quote :change :input? throw :always}, :order [:callers :value :ephemeral? :state :synapses :pulse-observed :lazy :pulse-last-changed :pulse :input? :nascent :meta :type :tiltontec.cell.base/cell :rule :useds :optimize :tiltontec.cell.base/c-formula cljs.core/fn cljs.core/let me tiltontec.cell.base/c-model cell slot-name tiltontec.cell.base/c-slot cache tiltontec.cell.base/c-value tiltontec.cell.core/c-fn-var slot-c# tiltontec.cell.core/make-c-formula :code quote tiltontec.cell.base/unbound tiltontec.cell.core/c-fn tiltontec.cell.core/without-c-dependency :until-asked :debug :when-value-t tiltontec.cell.core/c?once :once-asked :always :else :change cljs.core/cond cljs.core/not tiltontec.cell.core/*within-integrity* throw js/Error. tiltontec.cell.core/ufb-add :c-reset-next! opcode defer-info c__11133__auto__ new-value__11134__auto__ tiltontec.cell.core/call-c-reset-next!]}, :doc nil}