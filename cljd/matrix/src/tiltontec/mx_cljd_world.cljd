(ns tiltontec.mx-cljd-world
  (:require
    [clojure.string :as string]
    [tiltontec.cell.base :refer [ia-type unbound] :as cty]
    [tiltontec.cell.core :as cell
     :refer [cF cF+ cI]]
    [tiltontec.model.core :refer [make mget md-kids] :as md]
    [tiltontec.mx-flutter.core :as fx
     :refer [render-fx MaterialApp Center]]
    ["package:flutter/widgets.dart"
     :refer [Text]]
    ["package:flutter/material.dart" :as m
     :refer [MaterialApp Widget Scaffold MainAxisAlignment Colors Theme
             FloatingActionButton Icon Icons ThemeData runApp AppBar State]]
    ["package:flutter/painting.dart"
     :refer [TextStyle]]
    ;;["dart:intl" :as intl]
    ))

(defn make-app []
  (fx/render-fx
    (fx/MaterialApp {}
      {:title "Welcome to Red Flutter World"
       :theme (cF (ThemeData. :primarySwatch
                    (let [ttl (mget me :title)]
                      (cond
                        (string/includes? ttl "Reed") m.Colors/red
                        :else m.Colors/yellow))))}
      (fx/Scaffold {}
        {:appBar (AppBar.
                   :title (Text. (let [now (.now dart:core/DateTime)
                                       #_#_ fmt (.yMMMd dart:core/DateFormat)]
                                   ;;(prn :got-now now)
                                   ;;(prn :got-fmt fmt)
                                   (str "At " (second (string/split (str now) #" ")))
                                   #_ (.now dart:core/DateTime)
                                   #_ ((.format fmt) now))))
         :floatingActionButton (FloatingActionButton.
                                 :onPressed (fn ^void []
                                              (prn :BAM-press!!!)
                                              #_
                                              (.setState thisPageState
                                                #(do (swap! counter inc) nil)))
                                 :tooltip "Increment"
                                 :child (Icon. Icons/add
                                          :color Colors/black))}
        (fx/Center {} {}
          #_ (fx/Text {} {:style (TextStyle.
                                :color m.Colors/red
                                :fontSize 32.0)}
            (str "FX Rizing v." (rand-int 99)))

          (fx/Column {} {:mainAxisAlignment MainAxisAlignment/center}
            (fx/Text {} {:style (TextStyle.
                                  :color m.Colors/red
                                  :fontSize 32.0)}
              (str "FX Rizing v." (rand-int 99)))

            (fx/Text {} {:style (TextStyle.
                                  :color m.Colors/green
                                  :fontSize 32.0)}
              (str "Cooler " (rand-int 99)))))))))

