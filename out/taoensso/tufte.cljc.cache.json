["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ ","~$profiled","~$taoensso.tufte"],"~:excludes",["~#set",[]],"~:name","^6","~:imports",null,"~:requires",["^ ","~$enc","~$taoensso.encore","^=","^=","~$impl","~$taoensso.tufte.impl","^?","^?"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$IdStats","^?","~$Stats","^?","~$Clock","^?"],"~:defs",["^ ","~$valid-run-level",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","~:line",58,"~:column",16,"~:end-line",58,"~:end-column",31,"~:static",true,"~:arglists",["~#list",["~$quote",["^P",[["~$x"]]]]]],"^9","~$taoensso.tufte/valid-run-level","~:variadic",false,"^I","out/taoensso/tufte.cljc","^M",31,"^N",true,"~:method-params",["^P",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^P",[null,null]],"^K",1,"^J",58,"^L",58,"~:max-fixed-arity",1,"~:fn-var",true,"^O",["^P",["^Q",["^P",[["~$x"]]]]]],"~$may-profile?",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",148,"^K",43,"^L",148,"^M",55,"~:tag","~$boolean","^O",["^P",["^Q",["^P",[["~$level"],["^10","~$ns"]]]]],"~:doc","Returns true iff level and ns are runtime unfiltered.","~:top-fn",["^ ","^S",false,"^W",2,"^T",["^P",[["^10"],["^10","^11"]]],"^O",["^P",[["^10"],["^10","^11"]]],"^V",["^P",[null,null]]]],"^9","~$taoensso.tufte/may-profile?","^S",false,"^I","out/taoensso/tufte.cljc","^M",55,"^13",["^ ","^S",false,"^W",2,"^T",["^P",[["^10"],["^10","^11"]]],"^O",["^P",[["^10"],["^10","^11"]]],"^V",["^P",[null,null]]],"^T",["^P",[["^10"],["^10","^11"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",148,"~:ret-tag","^[","^L",148,"^W",2,"^Z","^[","^X",true,"^O",["^P",[["^10"],["^10","^11"]]],"^12","Returns true iff level and ns are runtime unfiltered."],"~$defnp",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",693,"^K",11,"^L",693,"^M",16,"~:macro",true,"^O",["^P",["^Q",["^P",[["~$name","~$doc-string?","~$attr-map?",["~$params*"],"~$prepost-map?","~$body"],["^18","^19","^1:",["^P",[["^1;"],"^1<","^1="]],"~$+","^1:"]]]]],"^12","Like `defn` but wraps fn bodies with `p` macro.","^13",["^ ","^S",true,"^W",2,"^T",[["^P",["~$&form","~$&env","~$sigs"]]],"^O",["^P",[["^1>","^1?","~$&","^1@"]]],"^V",["^P",[null]]]],"^9","~$taoensso.tufte/defnp","^S",true,"^I","out/taoensso/tufte.cljc","^M",16,"^13",["^ ","^S",true,"^W",2,"^T",[["^P",["^1>","^1?","^1@"]]],"^O",["^P",[["^1>","^1?","~$&","^1@"]]],"^V",["^P",[null]]],"^T",[["^P",["^1>","^1?","^1@"]]],"^U",null,"^V",["^P",[null]],"^K",1,"^J",693,"^17",true,"^L",693,"^W",2,"^X",false,"^O",["^P",[["^1>","^1?","~$&","^1@"]]],"^12","Like `defn` but wraps fn bodies with `p` macro."],"~$handlers_",["^ ","^9","~$taoensso.tufte/handlers_","^I","out/taoensso/tufte.cljc","^J",167,"^K",1,"^L",167,"^M",20,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",167,"^K",11,"^L",167,"^M",20],"^12","{<handler-id> <handler-fn>}","^Z","~$any"],"~$fnp",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",676,"^K",11,"^L",676,"^M",14,"^17",true,"^O",["^P",["^Q",["^P",[["~$name?",["^1;"],"^1<","^1="],["^1F",["^P",[["^1;"],"^1<","^1="]],"~$+"]]]]],"^12","Like `fn` but wraps fn bodies with `p` macro.","^13",["^ ","^S",true,"^W",2,"^T",[["^P",["^1>","^1?","^1@"]]],"^O",["^P",[["^1>","^1?","~$&","^1@"]]],"^V",["^P",[null]]]],"^9","~$taoensso.tufte/fnp","^S",true,"^I","out/taoensso/tufte.cljc","^M",14,"^13",["^ ","^S",true,"^W",2,"^T",[["^P",["^1>","^1?","^1@"]]],"^O",["^P",[["^1>","^1?","~$&","^1@"]]],"^V",["^P",[null]]],"^T",[["^P",["^1>","^1?","^1@"]]],"^U",null,"^V",["^P",[null]],"^K",1,"^J",676,"^17",true,"^L",676,"^W",2,"^X",false,"^O",["^P",[["^1>","^1?","~$&","^1@"]]],"^12","Like `fn` but wraps fn bodies with `p` macro."],"~$set-ns-pattern!",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",97,"^K",7,"^L",97,"^M",22,"^O",["^P",["^Q",["^P",[["~$ns-pattern"]]]]],"^12","Sets root binding of namespace filter.\n  See `compile-ns-filter` docstring for details on `ns-pattern` arg."],"^9","~$taoensso.tufte/set-ns-pattern!","^S",false,"^I","out/taoensso/tufte.cljc","^M",22,"^T",["^P",[["^1I"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",97,"^L",97,"^W",1,"^X",true,"^O",["^P",["^Q",["^P",[["^1I"]]]]],"^12","Sets root binding of namespace filter.\n  See `compile-ns-filter` docstring for details on `ns-pattern` arg."],"~$with-min-level",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",80,"^K",11,"^L",80,"^M",25,"^17",true,"^O",["^P",["^Q",["^P",[["^10","~$&","^1="]]]]],"^12","Executes body with dynamic minimum profiling level, e/o #{0 1 2 3 4 5 6}.\n    0 => Enable  all profiling.\n    6 => Disable all profiling.","^13",["^ ","^S",true,"^W",3,"^T",[["^P",["^1>","^1?","^10","^1="]]],"^O",["^P",[["^1>","^1?","^10","~$&","^1="]]],"^V",["^P",[null]]]],"^9","~$taoensso.tufte/with-min-level","^S",true,"^I","out/taoensso/tufte.cljc","^M",25,"^13",["^ ","^S",true,"^W",3,"^T",[["^P",["^1>","^1?","^10","^1="]]],"^O",["^P",[["^1>","^1?","^10","~$&","^1="]]],"^V",["^P",[null]]],"^T",[["^P",["^1>","^1?","^10","^1="]]],"^U",null,"^V",["^P",[null]],"^K",1,"^J",80,"^17",true,"^L",80,"^W",3,"^X",false,"^O",["^P",[["^1>","^1?","^10","~$&","^1="]]],"^12","Executes body with dynamic minimum profiling level, e/o #{0 1 2 3 4 5 6}.\n    0 => Enable  all profiling.\n    6 => Disable all profiling."],"~$add-basic-println-handler!",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",212,"^K",7,"^L",212,"^M",33,"^O",["^P",["^Q",["^P",[[["^ ","~:keys",["^1I"],"~:or",["^ ","^1I","*"]]]]]]],"^12","Adds a simple handler that logs `profile` stats output with `println`."],"^9","~$taoensso.tufte/add-basic-println-handler!","^S",false,"^I","out/taoensso/tufte.cljc","^M",33,"^T",["^P",[["~$p__19584"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",212,"^L",212,"^W",1,"^X",true,"^O",["^P",["^Q",["^P",[[["^ ","^1N",["^1I"],"^1O",["^ ","^1I","*"]]]]]]],"^12","Adds a simple handler that logs `profile` stats output with `println`."],"~$*min-level*",["^ ","^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",68,"^K",17,"^L",68,"^M",28,"~:dynamic",true],"^9","~$taoensso.tufte/*min-level*","^I","out/taoensso/tufte.cljc","^M",28,"^K",1,"^1S",true,"^J",68,"^L",68,"^Z","~$number","^12","e/o #{0 1 2 3 4 5 6}"],"~$*ns-filter*",["^ ","^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",95,"^K",16,"^L",95,"^M",27,"^1S",true],"^9","~$taoensso.tufte/*ns-filter*","^I","out/taoensso/tufte.cljc","^M",27,"^K",1,"^1S",true,"^J",95,"^L",95,"^Z","^1D","^12","(fn [?ns] -> truthy)."],"~$compile-ns-filter",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",433,"^K",7,"^L",433,"^M",24,"^O",["^P",["^Q",["^P",[["^1I"]]]]],"^12","Returns (fn [?ns]) -> truthy. Some example patterns:\n    \"foo.bar\", \"foo.bar.*\", #{\"foo\" \"bar\"},\n    {:whitelist [\"foo.bar.*\"] :blacklist [\"baz.*\"]}"],"^9","~$taoensso.tufte/compile-ns-filter","^S",false,"^I","out/taoensso/tufte.cljc","^M",24,"^T",["^P",[["^1I"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",433,"^L",433,"^W",1,"^X",true,"^O",["^P",["^Q",["^P",[["^1I"]]]]],"^12","Returns (fn [?ns]) -> truthy. Some example patterns:\n    \"foo.bar\", \"foo.bar.*\", #{\"foo\" \"bar\"},\n    {:whitelist [\"foo.bar.*\"] :blacklist [\"baz.*\"]}"],"~$format-stats",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",578,"^K",7,"^L",578,"^M",19,"^O",["^P",["^Q",["^P",[["~$stats"],["^1[","~$sort-fn"]]]]],"^13",["^ ","^S",false,"^W",2,"^T",["^P",[["^1["],["^1[","^20"]]],"^O",["^P",[["^1["],["^1[","^20"]]],"^V",["^P",[null,null]]]],"^9","~$taoensso.tufte/format-stats","^S",false,"^I","out/taoensso/tufte.cljc","^M",19,"^13",["^ ","^S",false,"^W",2,"^T",["^P",[["^1["],["^1[","^20"]]],"^O",["^P",[["^1["],["^1[","^20"]]],"^V",["^P",[null,null]]],"^T",["^P",[["^1["],["^1[","^20"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",578,"^L",578,"^W",2,"^X",true,"^O",["^P",[["^1["],["^1[","^20"]]]],"~$map->HandlerVal",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",165,"^K",12,"^L",165,"^M",22,"~:internal-ctor",true,"~:factory","~:map","^O",["^P",["^Q",["^P",[["~$G__19575"]]]]]],"^9","~$taoensso.tufte/map->HandlerVal","^S",false,"^I","out/taoensso/tufte.cljc","^M",22,"^T",["^P",[["^26"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^23",true,"^24","^25","^J",165,"^L",165,"^W",1,"^X",true,"^O",["^P",["^Q",["^P",[["^26"]]]]]],"~$invalid-run-level-msg",["^ ","^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",55,"^K",24,"^L",55,"^M",45,"~:const",true,"~:private",true],"^2:",true,"^9","~$taoensso.tufte/invalid-run-level-msg","^I","out/taoensso/tufte.cljc","^M",45,"~:const-expr",["^ ","~:op","~:constant","~:env",["^ ","~:context","~:expr"],"~:form","Invalid Tufte profiling level: should be int e/o #{0 1 2 3 4 5}","^Z","~$string"],"^K",1,"^29",true,"^J",55,"^L",55,"^Z","^2C"],"~$HandlerVal",["^ ","~:num-fields",8,"~:protocols",["^8",["~$cljs.core/IRecord","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^9","~$taoensso.tufte/HandlerVal","^I","out/taoensso/tufte.cljc","^M",22,"~:type",true,"^K",12,"^23",true,"^J",165,"~:record",true,"^L",165,"~:skip-protocol-flag",["^8",["^2G","^2H","^2I","^2J","^2K","^2L","^2M","^2N","^2O","^2P","^2Q","^2R","^2S","^2T"]]],"~$merge-stats",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",442,"^K",7,"^L",442,"^M",18,"^O",["^P",["^Q",["^P",[["~$s1","~$s2"]]]]],"^12","Merges stats maps from multiple runs or threads.\n  Automatically identifies and merges concurrent time windows."],"^9","~$taoensso.tufte/merge-stats","^S",false,"^I","out/taoensso/tufte.cljc","^M",18,"^T",["^P",[["^2Z","^2["]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",442,"^L",442,"^W",2,"^X",true,"^O",["^P",["^Q",["^P",[["^2Z","^2["]]]]],"^12","Merges stats maps from multiple runs or threads.\n  Automatically identifies and merges concurrent time windows."],"~$valid-run-level?",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",52,"^K",7,"^L",52,"^M",23,"^O",["^P",["^Q",["^P",[["~$x"]]]]]],"^9","~$taoensso.tufte/valid-run-level?","^S",false,"^I","out/taoensso/tufte.cljc","^M",23,"^T",["^P",[["~$x"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",52,"^L",52,"^W",1,"^X",true,"^O",["^P",["^Q",["^P",[["~$x"]]]]]],"~$valid-min-level?",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",53,"^K",7,"^L",53,"^M",23,"^O",["^P",["^Q",["^P",[["~$x"]]]]]],"^9","~$taoensso.tufte/valid-min-level?","^S",false,"^I","out/taoensso/tufte.cljc","^M",23,"^T",["^P",[["~$x"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",53,"^L",53,"^W",1,"^X",true,"^O",["^P",["^Q",["^P",[["~$x"]]]]]],"~$set-min-level!",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",69,"^K",14,"^L",69,"^M",28,"^O",["^P",["^Q",["^P",[["^10"]]]]],"^12","Sets root binding of minimum profiling level, e/o #{0 1 2 3 4 5 6}.\n    0 => Enable  all profiling.\n    6 => Disable all profiling."],"^9","~$taoensso.tufte/set-min-level!","^S",false,"^I","out/taoensso/tufte.cljc","^M",28,"^T",["^P",[["^10"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",69,"^L",69,"^W",1,"^X",true,"^O",["^P",["^Q",["^P",[["^10"]]]]],"^12","Sets root binding of minimum profiling level, e/o #{0 1 2 3 4 5 6}.\n    0 => Enable  all profiling.\n    6 => Disable all profiling."],"~$valid-min-level",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",64,"^K",16,"^L",64,"^M",31,"^N",true,"^O",["^P",["^Q",["^P",[["~$x"]]]]]],"^9","~$taoensso.tufte/valid-min-level","^S",false,"^I","out/taoensso/tufte.cljc","^M",31,"^N",true,"^T",["^P",[["~$x"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",64,"^L",64,"^W",1,"^X",true,"^O",["^P",["^Q",["^P",[["~$x"]]]]]],"~$stats-accumulator",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",529,"^K",7,"^L",529,"^M",24,"^O",["^P",["^Q",["^P",[[]]]]],"^12","Experimental, subject to change!\n  Small util to help merge stats maps from multiple runs or threads.\n  Returns a stateful fn with arities:\n    ([stats]) ; Accumulates the given stats (you may call this from any thread)\n    ([])      ; Deref: returns the merged value of all accumulated stats"],"^9","~$taoensso.tufte/stats-accumulator","^S",false,"^I","out/taoensso/tufte.cljc","^M",24,"^T",["^P",[[]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",529,"^L",529,"^W",0,"^X",true,"^O",["^P",["^Q",["^P",[[]]]]],"^12","Experimental, subject to change!\n  Small util to help merge stats maps from multiple runs or threads.\n  Returns a stateful fn with arities:\n    ([stats]) ; Accumulates the given stats (you may call this from any thread)\n    ([])      ; Deref: returns the merged value of all accumulated stats"],"~$with-ns-pattern",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",105,"^K",11,"^L",105,"^M",26,"^17",true,"^O",["^P",["^Q",["^P",[["^1I","~$&","^1="]]]]],"^12","Executes body with dynamic namespace filter.\n  See `compile-ns-filter` docstring for details on `ns-pattern` arg.","^13",["^ ","^S",true,"^W",3,"^T",[["^P",["^1>","^1?","^1I","^1="]]],"^O",["^P",[["^1>","^1?","^1I","~$&","^1="]]],"^V",["^P",[null]]]],"^9","~$taoensso.tufte/with-ns-pattern","^S",true,"^I","out/taoensso/tufte.cljc","^M",26,"^13",["^ ","^S",true,"^W",3,"^T",[["^P",["^1>","^1?","^1I","^1="]]],"^O",["^P",[["^1>","^1?","^1I","~$&","^1="]]],"^V",["^P",[null]]],"^T",[["^P",["^1>","^1?","^1I","^1="]]],"^U",null,"^V",["^P",[null]],"^K",1,"^J",105,"^17",true,"^L",105,"^W",3,"^X",false,"^O",["^P",[["^1>","^1?","^1I","~$&","^1="]]],"^12","Executes body with dynamic namespace filter.\n  See `compile-ns-filter` docstring for details on `ns-pattern` arg."],"~$accumulate-stats",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",546,"^K",7,"^L",546,"^M",23,"^O",["^P",["^Q",["^P",[["^39",["~$profiled-result","~$profiled-?stats"]]]]]],"^12","Experimental, subject to change!"],"^9","~$taoensso.tufte/accumulate-stats","^S",false,"^I","out/taoensso/tufte.cljc","^M",23,"^T",["^P",[["^39","~$p__19596"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",546,"^L",546,"^W",2,"^X",true,"^O",["^P",["^Q",["^P",[["^39",["^3>","^3?"]]]]]],"^12","Experimental, subject to change!"],"~$profiling?",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",230,"^K",7,"^L",230,"^M",17,"^O",["^P",["^Q",["^P",[[]]]]],"^12","Returns e/o #{nil :thread :dynamic}."],"^9","~$taoensso.tufte/profiling?","^S",false,"^I","out/taoensso/tufte.cljc","^M",17,"^T",["^P",[[]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",230,"^L",230,"^W",0,"^X",true,"^O",["^P",["^Q",["^P",[[]]]]],"^12","Returns e/o #{nil :thread :dynamic}."],"~$start-profiling-thread!",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",235,"^K",7,"^L",235,"^M",30,"^O",["^P",["^Q",["^P",[[]]]]],"^12","Warning: this is a low-level primitive. Prefer higher-level macros\n  like `profile` when possible.\n\n  NB: must be accompanied by a call to `stop-profiling-thread!`\n  (e.g. using `try`/`finally`)."],"^9","~$taoensso.tufte/start-profiling-thread!","^S",false,"^I","out/taoensso/tufte.cljc","^M",30,"^T",["^P",[[]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",235,"^L",235,"^W",0,"^X",true,"^O",["^P",["^Q",["^P",[[]]]]],"^12","Warning: this is a low-level primitive. Prefer higher-level macros\n  like `profile` when possible.\n\n  NB: must be accompanied by a call to `stop-profiling-thread!`\n  (e.g. using `try`/`finally`)."],"~$add-handler!",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",168,"^K",7,"^L",168,"^M",19,"^O",["^P",["^Q",["^P",[["~$handler-id","~$handler-fn"],["^3G","^1I","^3H"]]]]],"^12","Use this to register interest in stats output produced by `profile` calls.\n  Each registered `handler-fn` will be called as:\n\n    (handler-fn {:ns-str _ :level _ :?id _ :?data _ :stats _ :stats-str_ _})\n\n  Map args:\n    :ns-str     - Namespace string where `profile` call took place\n    :level      - Level e/o #{0 1 2 3 4 5}, given in `(profile {:level _} ...)`\n    :?id        - Optional id,              given in `(profile {:id    _} ...)`\n    :?data      - Optional arb data,        given in `(profile {:data  _} ...)`\n    :stats      - Stats map as in `(second (profiled ...))`\n    :stats-str_ - `(delay (format-stats stats))`\n\n  Error handling (NB):\n    Handler errors will be silently swallowed. Please `try`/`catch` and\n    appropriately deal with (e.g. log) possible errors *within* `handler-fn`.\n\n  Async/blocking:\n    `handler-fn` should ideally be non-blocking, or reasonably cheap. Handler\n     dispatch occurs through a 1-thread 1k-buffer dropping queue.\n\n  Ns filtering:\n    Provide an optional `ns-pattern` arg to only call handler for matching\n    namespaces. See `compile-ns-filter` docstring for details on `ns-pattern`.\n\n  Handler ideas:\n    Save to a db, log, `put!` to an appropriate `core.async` channel, filter,\n    aggregate, use for a realtime analytics dashboard, examine for outliers\n    or unexpected output, ...","^13",["^ ","^S",false,"^W",3,"^T",["^P",[["^3G","^3H"],["^3G","^1I","^3H"]]],"^O",["^P",[["^3G","^3H"],["^3G","^1I","^3H"]]],"^V",["^P",[null,null]]]],"^9","~$taoensso.tufte/add-handler!","^S",false,"^I","out/taoensso/tufte.cljc","^M",19,"^13",["^ ","^S",false,"^W",3,"^T",["^P",[["^3G","^3H"],["^3G","^1I","^3H"]]],"^O",["^P",[["^3G","^3H"],["^3G","^1I","^3H"]]],"^V",["^P",[null,null]]],"^T",["^P",[["^3G","^3H"],["^3G","^1I","^3H"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",168,"^L",168,"^W",3,"^X",true,"^O",["^P",[["^3G","^3H"],["^3G","^1I","^3H"]]],"^12","Use this to register interest in stats output produced by `profile` calls.\n  Each registered `handler-fn` will be called as:\n\n    (handler-fn {:ns-str _ :level _ :?id _ :?data _ :stats _ :stats-str_ _})\n\n  Map args:\n    :ns-str     - Namespace string where `profile` call took place\n    :level      - Level e/o #{0 1 2 3 4 5}, given in `(profile {:level _} ...)`\n    :?id        - Optional id,              given in `(profile {:id    _} ...)`\n    :?data      - Optional arb data,        given in `(profile {:data  _} ...)`\n    :stats      - Stats map as in `(second (profiled ...))`\n    :stats-str_ - `(delay (format-stats stats))`\n\n  Error handling (NB):\n    Handler errors will be silently swallowed. Please `try`/`catch` and\n    appropriately deal with (e.g. log) possible errors *within* `handler-fn`.\n\n  Async/blocking:\n    `handler-fn` should ideally be non-blocking, or reasonably cheap. Handler\n     dispatch occurs through a 1-thread 1k-buffer dropping queue.\n\n  Ns filtering:\n    Provide an optional `ns-pattern` arg to only call handler for matching\n    namespaces. See `compile-ns-filter` docstring for details on `ns-pattern`.\n\n  Handler ideas:\n    Save to a db, log, `put!` to an appropriate `core.async` channel, filter,\n    aggregate, use for a realtime analytics dashboard, examine for outliers\n    or unexpected output, ..."],"~$accounted-time",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",519,"^K",7,"^L",519,"^M",21,"^O",["^P",["^Q",["^P",[["^1["]]]]]],"^9","~$taoensso.tufte/accounted-time","^S",false,"^I","out/taoensso/tufte.cljc","^M",21,"^T",["^P",[["^1["]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",519,"^L",519,"^W",1,"^X",true,"^O",["^P",["^Q",["^P",[["^1["]]]]]],"~$invalid-min-level-msg",["^ ","^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",56,"^K",24,"^L",56,"^M",45,"^29",true,"^2:",true],"^2:",true,"^9","~$taoensso.tufte/invalid-min-level-msg","^I","out/taoensso/tufte.cljc","^M",45,"^2<",["^ ","^2=","^2>","^2?",["^ ","^2@","^2A"],"^2B","Invalid minimum Tufte profiling level: should be int e/o #{0 1 2 3 4 5 6}","^Z","^2C"],"^K",1,"^29",true,"^J",56,"^L",56,"^Z","^2C"],"~$remove-handler!",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",209,"^K",7,"^L",209,"^M",22,"^O",["^P",["^Q",["^P",[["^3G"]]]]]],"^9","~$taoensso.tufte/remove-handler!","^S",false,"^I","out/taoensso/tufte.cljc","^M",22,"^T",["^P",[["^3G"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",209,"^L",209,"^W",1,"^X",true,"^O",["^P",["^Q",["^P",[["^3G"]]]]]],"~$stop-profiling-thread!",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",245,"^K",7,"^L",245,"^M",29,"^O",["^P",["^Q",["^P",[[]]]]],"^12","Warning: this is a low-level primitive."],"^9","~$taoensso.tufte/stop-profiling-thread!","^S",false,"^I","out/taoensso/tufte.cljc","^M",29,"^T",["^P",[[]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",245,"^L",245,"^W",0,"^X",true,"^O",["^P",["^Q",["^P",[[]]]]],"^12","Warning: this is a low-level primitive."],"~$fn-sigs",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",658,"^K",8,"^L",658,"^M",15,"^2:",true,"^O",["^P",["^Q",["^P",[["~$def?","~$fn-name","^1@"]]]]]],"^2:",true,"^9","~$taoensso.tufte/fn-sigs","^S",false,"^I","out/taoensso/tufte.cljc","^M",15,"^T",["^P",[["^3S","^3T","^1@"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",658,"^L",658,"^W",3,"^X",true,"^O",["^P",["^Q",["^P",[["^3S","^3T","^1@"]]]]]],"~$chance",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",439,"^K",7,"^L",439,"^M",13,"^O",["^P",["^Q",["^P",[["~$p"]]]]],"^12","Returns true with 0<`p`<1 probability."],"^9","~$taoensso.tufte/chance","^S",false,"^I","out/taoensso/tufte.cljc","^M",13,"^T",["^P",[["~$p"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",439,"^L",439,"^W",1,"^X",true,"^O",["^P",["^Q",["^P",[["~$p"]]]]],"^12","Returns true with 0<`p`<1 probability."],"~$-compile-ns-filter",["^ ","^9","~$taoensso.tufte/-compile-ns-filter","^I","out/taoensso/tufte.cljc","^J",93,"^K",1,"^L",93,"^M",24,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",93,"^K",6,"^L",93,"^M",24],"^Z","^1D"],"~$ft",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",570,"^K",8,"^L",570,"^M",10,"^2:",true,"^O",["^P",["^Q",["^P",[["~$nanosecs"]]]]]],"^2:",true,"^9","~$taoensso.tufte/ft","^S",false,"^I","out/taoensso/tufte.cljc","^M",10,"^T",["^P",[["^3["]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",570,"^L",570,"^W",1,"^X",true,"^O",["^P",["^Q",["^P",[["^3["]]]]]],"~$->HandlerVal",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",165,"^K",12,"^L",165,"^M",22,"^23",true,"^24","~:positional","^O",["^P",["^Q",["^P",[["~$ns-str","^10","~$?id","~$?data","^1[","~$stats-str_","~$?file","~$?line"]]]]]],"^9","~$taoensso.tufte/->HandlerVal","^S",false,"^I","out/taoensso/tufte.cljc","^M",22,"^T",["^P",[["^43","^10","^44","^45","^1[","^46","^47","^48"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^23",true,"^24","^42","^J",165,"^L",165,"^W",8,"^X",true,"^O",["^P",["^Q",["^P",[["^43","^10","^44","^45","^1[","^46","^47","^48"]]]]]],"~$perc",["^ ","^G",null,"^H",["^ ","^I","/Users/kennethtilton/todoFRP/todo/MatrixCLJS/out/taoensso/tufte.cljc","^J",567,"^K",8,"^L",567,"^M",12,"^2:",true,"^O",["^P",["^Q",["^P",[["~$n","~$d"]]]]]],"^2:",true,"^9","~$taoensso.tufte/perc","^S",false,"^I","out/taoensso/tufte.cljc","^M",12,"^T",["^P",[["~$n","~$d"]]],"^U",null,"^V",["^P",[null,null]],"^K",1,"^J",567,"^L",567,"^W",2,"^X",true,"^O",["^P",["^Q",["^P",[["~$n","~$d"]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^6","^6","^<","^=","^=","^=","^>","^?","^?","^?"],"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["~:time%","~:min","~:given","~$cljs.core/binding","^1[","~:mean","~:else","~:ns-pattern","~:stats-str_","~:time","~$cljs.core/defn","^1T","~:?file","~:n-calls","^2V","~:ns-str","^46","~:level","^3Y","~$taoensso.tufte/p","^47","^1S","~:thread","~:max","^1W","~:id","^43","~$cljs.core/fn","^10","~:basic-println","~:?data","~:?line","~:mad","~:?id","~:def","^38","~:stats","^45","^48","^44"]],"~:order",["^4B","^2V","^4C","^1T","^38","^1W","^3Y","^4L","^4M","^4W","^4T","^4Y","^4G","^4J","^4U","^43","^10","^44","^45","^1[","^46","^47","^48","^4F","^4S","^1S","^4O","^4E","^4Q","^4K","^4A","^4P","^4V","^4D","^4@","^4H","^4N","^4X","^4R","^4I"]],"^12","A simple, fast, monitoring profiler for Clojure/Script.\n\n  Usage: wrap+name interesting body exprs with the `p` macro. Then activate\n  profiling of these wrapped exprs using the `profiled` or `profile` macros:\n\n    (profiled {} (p :my-fn (my-fn))) ; Returns [<body-result> <?stats-map>]\n    (profile  {} (p :my-fn (my-fn))) ; Returns  <body-result>, dispatches\n                                     ; ?stats-map to any registered handlers.\n\n  Extensive facilities are provided for compile-time elision and runtime\n  filtering.\n\n  See the relevant docstrings for more info:\n    `p`, `profiled`, `profile`, `add-handler!` ; Core API\n\n    (p        [opts & body] [id & body]) ; e.g. `(p ::my-pid (do-work))`\n    (profiled [opts & body])             ; e.g. `(profiled {:level 2} (my-fn))`\n    (profile  [opts & body])             ; e.g. `(profiled {:level 2} (my-fn))`\n\n    (add-handler! [handler-id ns-pattern handler-fn])\n\n  How/where to use this library:\n    Tufte is highly optimized: even without elision, you can usually leave\n    profiling code in production (e.g. for sampled profiling, or to detect\n    unusual performance behaviour). Tufte's stats maps are well suited to\n    programmatic inspection + analysis."]