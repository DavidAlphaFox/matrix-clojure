{:rename-macros {}, :renames {}, :externs {JSON {stringify {}}, Error {}}, :use-macros {input tiltontec.tag.gen, fn-obs tiltontec.cell.observer, h1 tiltontec.tag.gen, p tiltontec.tag.gen, c-in tiltontec.cell.core, a tiltontec.tag.gen, dom-tag tiltontec.tag.gen, span tiltontec.tag.gen, mxi-find tiltontec.model.core, unbound tiltontec.cell.base, pln tiltontec.util.core, c?n tiltontec.cell.core, now tiltontec.util.core, ul tiltontec.tag.gen, button tiltontec.tag.gen, c?+ tiltontec.cell.core, li tiltontec.tag.gen, c-value tiltontec.cell.base, *within-integrity* tiltontec.cell.base, md-get tiltontec.model.core, section tiltontec.tag.gen, c-get tiltontec.cell.evaluate, md-reset! tiltontec.model.core, c?once tiltontec.cell.core, c?+n tiltontec.cell.core, header tiltontec.tag.gen, footer tiltontec.tag.gen, ia-type tiltontec.cell.base, matrix tiltontec.model.core, div tiltontec.tag.gen, c-reset! tiltontec.cell.core, mxu-find-class tiltontec.model.core, c? tiltontec.cell.core, xor tiltontec.util.core, label tiltontec.tag.gen, mx-par tiltontec.model.core, kid-values-kids tiltontec.model.core}, :excludes #{}, :name example.gentle-intro, :imports nil, :requires {tag tiltontec.tag.html, tiltontec.cell.observer tiltontec.cell.observer, tiltontec.cell.base tiltontec.cell.base, md tiltontec.model.core, tiltontec.tag.html tiltontec.tag.html, tiltontec.util.core tiltontec.util.core, tiltontec.cell.evaluate tiltontec.cell.evaluate, tiltontec.cell.core tiltontec.cell.core, tiltontec.model.core tiltontec.model.core, pp cljs.pprint, cljs.pprint cljs.pprint, str clojure.string, tiltontec.tag.gen tiltontec.tag.gen, clojure.string clojure.string}, :cljs.spec/speced-vars [], :uses {io-upsert tiltontec.tag.html, c-in tiltontec.cell.core, dom-tag tiltontec.tag.gen, map-to-json tiltontec.util.core, mxi-find tiltontec.model.core, unbound tiltontec.cell.base, pln tiltontec.util.core, now tiltontec.util.core, tagfo tiltontec.tag.html, tag-dom tiltontec.tag.html, c-value tiltontec.cell.base, *within-integrity* tiltontec.cell.base, md-get tiltontec.model.core, c-get tiltontec.cell.evaluate, md-reset! tiltontec.model.core, dom-has-class tiltontec.tag.html, ia-type tiltontec.cell.base, matrix tiltontec.model.core, c-reset! tiltontec.cell.core, mxu-find-class tiltontec.model.core, xor tiltontec.util.core, dom-ancestor-by-tag tiltontec.tag.html, mx-par tiltontec.model.core, io-read tiltontec.tag.html, io-clear-storage tiltontec.tag.html, kid-values-kids tiltontec.model.core, uuidv4 tiltontec.util.core}, :defs {gentle-intro-input-cells {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/example/gentle_intro.cljs", :line 103, :column 7, :end-line 103, :end-column 31, :arglists (quote ([]))}, :name example.gentle-intro/gentle-intro-input-cells, :variadic false, :file "src/example/gentle_intro.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, gentle-intro-formulaic-cells {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/example/gentle_intro.cljs", :line 166, :column 7, :end-line 166, :end-column 35, :arglists (quote ([]))}, :name example.gentle-intro/gentle-intro-formulaic-cells, :variadic false, :file "src/example/gentle_intro.cljs", :end-column 35, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, gentle-intro-models {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/example/gentle_intro.cljs", :line 231, :column 7, :end-line 231, :end-column 26, :arglists (quote ([]))}, :name example.gentle-intro/gentle-intro-models, :variadic false, :file "src/example/gentle_intro.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 231, :end-line 231, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, gentle-intro-to-Tag {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/example/gentle_intro.cljs", :line 290, :column 7, :end-line 290, :end-column 26, :arglists (quote ([]))}, :name example.gentle-intro/gentle-intro-to-Tag, :variadic false, :file "src/example/gentle_intro.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 290, :end-line 290, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, matrix-build! {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/example/gentle_intro.cljs", :line 97, :column 7, :end-line 97, :end-column 20, :arglists (quote ([]))}, :name example.gentle-intro/matrix-build!, :variadic false, :file "src/example/gentle_intro.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, gentle-intro-ls-key {:name example.gentle-intro/gentle-intro-ls-key, :file "src/example/gentle_intro.cljs", :line 101, :column 1, :end-line 101, :end-column 25, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/example/gentle_intro.cljs", :line 101, :column 6, :end-line 101, :end-column 25}, :tag string}, to-do {:name example.gentle-intro/to-do, :file "src/example/gentle_intro.cljs", :line 288, :column 1, :end-line 288, :end-column 20, :export true, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/example/gentle_intro.cljs", :line 288, :column 15, :end-line 288, :end-column 20, :export true}, :tag number}}, :cljs.spec/registry-ref [], :require-macros {pp cljs.pprint, cljs.pprint cljs.pprint, tiltontec.cell.core tiltontec.cell.core, tiltontec.cell.observer tiltontec.cell.observer, tiltontec.tag.gen tiltontec.tag.gen}, :cljs.analyzer/constants {:seen #{h1 :deleted clojure.core/assert me = :todos p :content unbound pln :completed :rule :value to-do :onclick todos :obs :type :created when :mx-dom tag/*tag-trace* if :title completed :style md-get zero? c-get md-reset! fn* not :id title :code :procedural-clearing-todos!!! str/join :example.gentle-intro/todo todos-empty binding cache c? inc :versions str :version count :example.gentle-intro/dummyApp todo-count tiltontec.model.core/the-kids :procedural-adding-todo!!!}, :order [:obs :todos :example.gentle-intro/dummyApp :mx-dom :code clojure.core/assert me tiltontec.model.core/the-kids h1 p :value :rule :procedural-adding-todo!!! :procedural-clearing-todos!!! pln count c-get todos zero? todo-count todos-empty :type :example.gentle-intro/todo :id :created :title :versions :version when md-get inc if = cache unbound :completed :deleted :style :onclick :content fn* binding tag/*tag-trace* md-reset! to-do not completed c? str/join str title]}, :doc nil}