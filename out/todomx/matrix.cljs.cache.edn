{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {input tiltontec.tag.gen, fn-obs tiltontec.cell.observer, h1 tiltontec.tag.gen, p tiltontec.tag.gen, c-in tiltontec.cell.core, a tiltontec.tag.gen, dom-tag tiltontec.tag.gen, span tiltontec.tag.gen, mxu-find-type tiltontec.model.core, mxi-find tiltontec.model.core, unbound tiltontec.cell.base, pln tiltontec.util.core, c?n tiltontec.cell.core, now tiltontec.util.core, *defer-changes* tiltontec.cell.base, ul tiltontec.tag.gen, button tiltontec.tag.gen, c?+ tiltontec.cell.core, li tiltontec.tag.gen, *within-integrity* tiltontec.cell.base, md-get tiltontec.model.core, section tiltontec.tag.gen, md-reset! tiltontec.model.core, c?once tiltontec.cell.core, c?+n tiltontec.cell.core, header tiltontec.tag.gen, footer tiltontec.tag.gen, ia-type tiltontec.cell.base, matrix tiltontec.model.core, div tiltontec.tag.gen, mxu-find-class tiltontec.model.core, c? tiltontec.cell.core, xor tiltontec.util.core, label tiltontec.tag.gen, mx-par tiltontec.model.core, kid-values-kids tiltontec.model.core}, :excludes #{}, :name todomx.matrix, :imports nil, :requires {form goog.dom.forms, tag tiltontec.tag.html, tiltontec.cell.observer tiltontec.cell.observer, goog.dom.forms goog.dom.forms, goog.dom goog.dom, classlist goog.dom.classlist, selection goog.dom.selection, tiltontec.cell.base tiltontec.cell.base, goog.dom.classlist goog.dom.classlist, dom goog.dom, md tiltontec.model.core, tiltontec.tag.html tiltontec.tag.html, goog.editor.focus goog.editor.focus, tiltontec.util.core tiltontec.util.core, todomx.todo todomx.todo, r bide.core, tiltontec.cell.core tiltontec.cell.core, tiltontec.model.core tiltontec.model.core, pp cljs.pprint, cljs.pprint cljs.pprint, bide.core bide.core, event goog.events.Event, str clojure.string, goog.events.Event goog.events.Event, tiltontec.tag.gen tiltontec.tag.gen, goog.dom.selection goog.dom.selection, clojure.string clojure.string, focus goog.editor.focus}, :cljs.spec/speced-vars [], :uses {td-upsert todomx.todo, io-upsert tiltontec.tag.html, c-in tiltontec.cell.core, dom-tag tiltontec.tag.gen, td-delete! todomx.todo, mxu-find-type tiltontec.model.core, mxi-find tiltontec.model.core, unbound tiltontec.cell.base, pln tiltontec.util.core, now tiltontec.util.core, *defer-changes* tiltontec.cell.base, td-toggle-completed! todomx.todo, load-all todomx.todo, tagfo tiltontec.tag.html, tag-dom tiltontec.tag.html, make-todo todomx.todo, *within-integrity* tiltontec.cell.base, md-get tiltontec.model.core, td-title todomx.todo, md-reset! tiltontec.model.core, td-id todomx.todo, dom-has-class tiltontec.tag.html, ia-type tiltontec.cell.base, matrix tiltontec.model.core, td-completed todomx.todo, mxu-find-class tiltontec.model.core, xor tiltontec.util.core, dom-ancestor-by-tag tiltontec.tag.html, mx-par tiltontec.model.core, io-read tiltontec.tag.html, io-clear-storage tiltontec.tag.html, td-created todomx.todo, tag-dom-create tiltontec.tag.html, kid-values-kids tiltontec.model.core}, :defs {todo-entry-field {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 100, :column 7, :end-line 100, :end-column 23, :arglists (quote ([]))}, :name todomx.matrix/todo-entry-field, :variadic false, :file "src/todomx/matrix.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mx-route {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 246, :column 7, :end-line 246, :end-column 15, :arglists (quote ([mx]))}, :name todomx.matrix/mx-route, :variadic false, :file "src/todomx/matrix.cljs", :end-column 15, :method-params ([mx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 246, :end-line 246, :max-fixed-arity 1, :fn-var true, :arglists (quote ([mx]))}, mx-todo-items {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 264, :column 7, :end-line 264, :end-column 20, :arglists (quote ([] [mx])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [mx]), :arglists ([] [mx]), :arglists-meta (nil nil)}}, :name todomx.matrix/mx-todo-items, :variadic false, :file "src/todomx/matrix.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [mx]), :arglists ([] [mx]), :arglists-meta (nil nil)}, :method-params ([] [mx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 1, :fn-var true, :arglists ([] [mx])}, toggle-all {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 142, :column 7, :end-line 142, :end-column 17, :arglists (quote ([]))}, :name todomx.matrix/toggle-all, :variadic false, :file "src/todomx/matrix.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, todo-edit {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 197, :column 7, :end-line 197, :end-column 16, :arglists (quote ([e todo]))}, :name todomx.matrix/todo-edit, :variadic false, :file "src/todomx/matrix.cljs", :end-column 16, :method-params ([e todo]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 2, :fn-var true, :arglists (quote ([e todo]))}, matrix-build! {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 39, :column 7, :end-line 39, :end-column 20, :arglists (quote ([]))}, :name todomx.matrix/matrix-build!, :variadic false, :file "src/todomx/matrix.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mx-find-matrix {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 270, :column 7, :end-line 270, :end-column 21, :arglists (quote ([mx]))}, :name todomx.matrix/mx-find-matrix, :variadic false, :file "src/todomx/matrix.cljs", :end-column 21, :method-params ([mx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 1, :fn-var true, :arglists (quote ([mx]))}, mx-todos {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 249, :column 7, :end-line 249, :end-column 15, :arglists (quote ([] [mx])), :doc "Given a node in the matrix, navigate to the root and read the todos. After\n  the matrix is initially loaded (say in an event handler), one can pass nil\n  and find the matrix in @matrix. Put another way, a starting node is required\n  during the matrix's initial build.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [mx]), :arglists ([] [mx]), :arglists-meta (nil nil)}}, :name todomx.matrix/mx-todos, :variadic false, :file "src/todomx/matrix.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [mx]), :arglists ([] [mx]), :arglists-meta (nil nil)}, :method-params ([] [mx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 249, :end-line 249, :max-fixed-arity 1, :fn-var true, :arglists ([] [mx]), :doc "Given a node in the matrix, navigate to the root and read the todos. After\n  the matrix is initially loaded (say in an event handler), one can pass nil\n  and find the matrix in @matrix. Put another way, a starting node is required\n  during the matrix's initial build."}, todo-list-items {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 117, :column 7, :end-line 117, :end-column 22, :arglists (quote ([]))}, :name todomx.matrix/todo-list-items, :variadic false, :file "src/todomx/matrix.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, todo-list-item {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 166, :column 7, :end-line 166, :end-column 21, :arglists (quote ([me todo]))}, :name todomx.matrix/todo-list-item, :variadic false, :file "src/todomx/matrix.cljs", :end-column 21, :method-params ([me todo]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 2, :fn-var true, :arglists (quote ([me todo]))}, dashboard-footer {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 220, :column 7, :end-line 220, :end-column 23, :arglists (quote ([]))}, :name todomx.matrix/dashboard-footer, :variadic false, :file "src/todomx/matrix.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 220, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, landing-page {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 84, :column 7, :end-line 84, :end-column 19, :arglists (quote ([]))}, :name todomx.matrix/landing-page, :variadic false, :file "src/todomx/matrix.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, start-router {:protocol-inline nil, :meta {:file "/Users/kennethtilton/todoFRP/todo/MatrixCLJS/src/todomx/matrix.cljs", :line 69, :column 7, :end-line 69, :end-column 19, :arglists (quote ([]))}, :name todomx.matrix/start-router, :variadic false, :file "src/todomx/matrix.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {pp cljs.pprint, cljs.pprint cljs.pprint, tiltontec.cell.core tiltontec.cell.core, tiltontec.cell.observer tiltontec.cell.observer, tiltontec.tag.gen tiltontec.tag.gen}, :cljs.analyzer/constants {:seen #{sort-by input every? h1 :selector :onblur clojure.core/assert todo-entry-field me :Completed .-target = :todos :empty? p a :kid-values :placeholder :All span td-delete! :items-completed :kid-key doseq p1__11479# md/with-par :content :default classlist/add when-let mx-route tag/input-editing-start li-dom :completed :rule remove :value let mx-todo-items p1__11505# :onclick empty? :onkeydown now :obs ul toggle-all :todomx.matrix/todoApp when :onkeypress :route :items-raw rte :mx-dom :Active td-toggle-completed! todo-edit if button :ignore :title li or md-get td td-title edt-dom mx-todos :for :uncomplete md-reset! todo-list-items pp/cl-format fn* :tiltontec.tag.html/type route :hidden :id :class todo-list-item :autofocus clojure.core/deref header :checked tiltontec.cell.base/without-c-dependency todomx.todo/todo-list :code :todo div cond :display :action for :ondblclick td-completed p1__11506# :complete dom/getAncestorByTagNameAndClass dashboard-footer cache c? xor filter p1__11507# dom/getElementByClass :kid-factory :items p1__11472# if-let landing-page label case :input? mx-par count io-read :on-navigate td-created event/preventDefault todo :href tiltontec.model.core/the-kids kid-values-kids :items-active :router-starter action}, :order [:todomx.matrix/todoApp :todos :code tiltontec.cell.base/without-c-dependency todomx.todo/todo-list :input? :value :rule :mx-dom md/with-par me landing-page :route :obs or io-read :router-starter :All :Active :Completed :default :on-navigate :ignore :class clojure.core/assert tiltontec.model.core/the-kids header h1 todo-entry-field todo-list-items dashboard-footer p :autofocus :placeholder :onkeypress :items-raw :title :hidden md-get mx-todos :empty? toggle-all ul :kid-values :kid-key :kid-factory c? when-let rte mx-route sort-by td-created case :items :items-completed :items-active fn* p1__11472# :todo todo-list-item kid-values-kids cache :action if every? td-completed mx-todo-items :uncomplete :complete input :id :tiltontec.tag.html/type :checked = mx-par label :for :onclick p1__11479# let action event/preventDefault doseq td md-reset! :completed when now :display todo if-let route cond xor div td-toggle-completed! :ondblclick p1__11505# li-dom dom/getAncestorByTagNameAndClass .-target edt-dom dom/getElementByClass classlist/add tag/input-editing-start td-title button td-delete! :onblur :onkeydown p1__11506# todo-edit p1__11507# span :content pp/cl-format count remove for li a :href :selector clojure.core/deref empty? filter]}, :doc nil}